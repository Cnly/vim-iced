version: 2
jobs:
  build:
    docker:
      - image: uochan/vim:latest
    working_directory: /tmp/workspace
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip3 install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            bash scripts/lint.sh
            python3 -m doctest python/bencode.py
      - run:
          command: |
            bash scripts/version_check.sh
      - run:
          command: |
            bash scripts/deps_check.sh
      - run:
          command: |
            git clone https://github.com/thinca/vim-themis .vim-themis
            git clone https://github.com/guns/vim-sexp .vim-sexp
            ./.vim-themis/bin/themis
      - run:
          command: |
            . venv/bin/activate
            bash scripts/coverage.sh

  neovim-build:
    docker:
      - image: lambdalisue/neovim-themis:latest
    working_directory: /mnt/volume
    steps:
      - run:
          command: apk update && apk upgrade && apk add --no-cache git
      - checkout
      - run:
          command: |
            git clone --depth 1 --single-branch https://github.com/guns/vim-sexp .vim-sexp
            /opt/github.com/thinca/vim-themis/bin/themis

  ancient:
    docker:
      - image: circleci/clojure:tools-deps
    working_directory: /tmp/workspace
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "deps.edn" }}
      - run:
          command: |
            bash scripts/ancient.sh
      - save_cache:
          paths:
            - ~/.clojure/.cpcache
            - ~/.m2
          key: v2-dependencies-{{ checksum "deps.edn" }}

  docs-build:
    docker:
      - image: circleci/clojure:tools-deps
    working_directory: /tmp/workspace
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "deps.edn" }}
      - run:
          command: |
            bash scripts/html.sh
      - save_cache:
          paths:
            - ~/.clojure/.cpcache
            - ~/.m2
          key: v2-dependencies-{{ checksum "deps.edn" }}
      - persist_to_workspace:
          root: target
          paths: html

  load-files-build:
    docker:
      - image: circleci/clojure:tools-deps
    working_directory: /tmp/workspace
    steps:
      - checkout
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "deps.edn" }}
      - run:
          command: |
            clojure -A:load-files-test
      - save_cache:
          paths:
            - ~/.clojure/.cpcache
            - ~/.m2
          key: v2-dependencies-{{ checksum "deps.edn" }}

  nightly-docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run:
          name: Install and deploy dev docs to netlify
          command: |
            npm install -g --silent netlify-cli
            sleep 3
            netlify deploy --auth=${NETLIFY_PERSONAL_ACCESS_TOKEN} --site=${NETLIFY_SITE_ID} --dir=target/html --prod

  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: target
      - run:
          name: Disable jekyll builds
          command: touch target/html/.nojekyll
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "liquidz.uo+circleci@gmail.com"
            git config user.name "liquidz"
      - add_ssh_keys:
          fingerprints:
            - "38:58:81:f1:62:2a:de:94:88:b0:f2:72:b7:fc:c6:cf"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist target/html

workflows:
  version: 2
  all_test:
    jobs:
      - build
      - neovim-build
      - docs-build
      - load-files-build
      - nightly-docs-deploy:
          requires:
            - docs-build
          filters:
            branches:
              only: dev
      - docs-deploy:
          requires:
            - build
            - neovim-build
            - docs-build
            - load-files-build
          filters:
            branches:
              only: master
